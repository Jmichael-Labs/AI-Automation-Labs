#!/usr/bin/env python3
"""
Clean Veo 3 video generator - WORKING VERSION
Fixes the issues in visual_content_engine.py
"""

import time
import os
from datetime import datetime
from google import genai
from google.genai import types

def generate_single_video_segment(segment_prompt, segment_number, industry):
    """Generate a single video segment using Veo 3 - CLEAN VERSION"""
    
    try:
        # Initialize GenAI client for Veo 3
        client = genai.Client()
        
        print(f"üöÄ GENERATING with Veo 3 - Segment {segment_number}")
        print(f"üí≥ Using GenAI Client (correct 2025 approach)")
        
        # Generate video with Veo 3 using correct GenAI Client
        operation = client.models.generate_videos(
            model="veo-3.0-generate-preview",
            prompt=segment_prompt,
            config=types.GenerateVideosConfig(
                aspect_ratio="16:9"
            )
        )
        
        # Poll the operation status until the video is ready (optimized timing)
        print(f"‚è≥ Waiting for Veo 3 video generation to complete...")
        poll_count = 0
        max_polls = 30  # 5 minute maximum (30 * 10s = 300s)
        
        while not operation.done and poll_count < max_polls:
            poll_count += 1
            print(f"   Polling {poll_count}/{max_polls} (estimated: {poll_count * 10}s elapsed)")
            time.sleep(10)
            operation = client.operations.get(operation)
        
        if poll_count >= max_polls:
            raise Exception(f"Video generation timeout after {max_polls * 10} seconds")
        
        # Process completed operation
        if operation.response and operation.response.generated_videos:
            # Save the video file
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            video_filename = f"/tmp/newsroom_segment_{segment_number}_{industry}_{timestamp}.mp4"
            
            # Get video data and download
            generated_video = operation.response.generated_videos[0]
            client.files.download(file=generated_video.video)
            generated_video.video.save(video_filename)
            
            # Verify file was saved
            if os.path.exists(video_filename):
                file_size = os.path.getsize(video_filename)
                print(f"üé• VEO 3 REAL VIDEO successfully generated!")
                print(f"üìÅ File: {video_filename}")
                print(f"üìä File size: {file_size} bytes")
                print(f"‚è±Ô∏è Duration: 8 seconds (Veo 3)")
                print(f"üì∫ Resolution: 720p, 16:9 aspect ratio")
                
                return {
                    "segment_number": segment_number,
                    "file_path": video_filename,
                    "file_size": file_size,
                    "source": "veo3_real"
                }
            else:
                raise Exception("Video file not saved")
        else:
            raise Exception("No video generated by Veo 3")
            
    except Exception as e:
        print(f"‚ö†Ô∏è Veo 3 generation failed: {e}")
        return None

if __name__ == "__main__":
    # Test the function
    test_prompt = "A professional futuristic newsroom with AI graphics and technology displays"
    result = generate_single_video_segment(test_prompt, 1, "test")
    if result:
        print(f"‚úÖ SUCCESS: {result}")
    else:
        print("‚ùå FAILED to generate video")